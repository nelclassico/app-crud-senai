{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\programador\\\\Documents\\\\crudReact\\\\app-crud-senai\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\n// Aula: Criando o componente de registro\n// Objetivo: Criar um formulário para registrar usuários via API\n\n// Importa o React e useState para gerenciar estado\nimport React, { useState } from 'react';\n// Importa o axios para fazer requisições HTTP\nimport axios from 'axios';\n\n// Define o componente Register\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  // Estado para o email\n  const [email, setEmail] = useState('');\n  // Estado para a senha\n  const [password, setPassword] = useState('');\n  // Estado para a mensagem de resposta\n  const [message, setMessage] = useState('');\n\n  // Função para lidar com o envio do formulário\n  const handleSubmit = async e => {\n    // Impede o comportamento padrão do formulário\n    e.preventDefault();\n    try {\n      // Faz uma requisição POST para a rota de registro\n      const response = await axios.post('http://localhost:3001/api/auth/registro', {\n        email,\n        password\n      });\n      // Define a mensagem de sucesso\n      setMessage(`Sucesso: ${response.data.message} (ID: ${response.data.userId})`);\n      // Limpa os campos\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      // Define a mensagem de erro\n      setMessage(`Erro: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Falha ao registrar'}`);\n    }\n  };\n\n  // Renderiza o componente\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Registro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n// Exporta o componente\n_s(Register, \"d0J/XCGznNwJDPwFtxo8Y/0hle4=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","message","setMessage","handleSubmit","e","preventDefault","response","post","data","userId","error","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/programador/Documents/crudReact/app-crud-senai/frontend/src/components/Register.js"],"sourcesContent":["// Aula: Criando o componente de registro\r\n// Objetivo: Criar um formulário para registrar usuários via API\r\n\r\n// Importa o React e useState para gerenciar estado\r\nimport React, { useState } from 'react';\r\n// Importa o axios para fazer requisições HTTP\r\nimport axios from 'axios';\r\n\r\n// Define o componente Register\r\nconst Register = () => {\r\n    // Estado para o email\r\n    const [email, setEmail] = useState('');\r\n    // Estado para a senha\r\n    const [password, setPassword] = useState('');\r\n    // Estado para a mensagem de resposta\r\n    const [message, setMessage] = useState('');\r\n\r\n    // Função para lidar com o envio do formulário\r\n    const handleSubmit = async (e) => {\r\n        // Impede o comportamento padrão do formulário\r\n        e.preventDefault();\r\n        try {\r\n            // Faz uma requisição POST para a rota de registro\r\n            const response = await axios.post('http://localhost:3001/api/auth/registro', { email, password });\r\n            // Define a mensagem de sucesso\r\n            setMessage(`Sucesso: ${response.data.message} (ID: ${response.data.userId})`);\r\n            // Limpa os campos\r\n            setEmail('');\r\n            setPassword('');\r\n        } catch (error) {\r\n            // Define a mensagem de erro\r\n            setMessage(`Erro: ${error.response?.data?.message || 'Falha ao registrar'}`);\r\n        }\r\n    };\r\n\r\n    // Renderiza o componente\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h2 className=\"text-center\">Registro</h2>\r\n            {/* Exibe a mensagem de resposta */}\r\n            {message && <div className=\"alert alert-info\">{message}</div>}\r\n            {/* Formulário de registro */}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Senha</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Registrar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Exporta o componente\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}