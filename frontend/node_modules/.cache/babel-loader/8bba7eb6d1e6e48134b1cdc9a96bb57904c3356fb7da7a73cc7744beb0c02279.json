{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\programador\\\\Documents\\\\crudReact\\\\app-crud-senai\\\\frontend\\\\src\\\\components\\\\Tarefas.js\",\n  _s = $RefreshSig$();\n// Importando o React e os hooks necessários para gerenciar estado e efeitos\nimport React, { useState, useEffect } from 'react';\n// Importando axios para fazer requisições HTTP ao backend\nimport axios from 'axios';\n// Importando useNavigate para redirecionar o usuário\nimport { useNavigate } from 'react-router-dom';\n\n// Definindo o componente funcional Tarefas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tarefas = () => {\n  _s();\n  // Estado para armazenar a lista de tarefas\n  const [tarefas, setTarefas] = useState([]);\n  // Estado para o título da nova tarefa\n  const [titulo, setTitulo] = useState('');\n  // Estado para mensagens de feedback (sucesso ou erro)\n  const [message, setMessage] = useState('');\n  // Hook de navegação para redirecionar\n  const navigate = useNavigate();\n\n  // Função para buscar as tarefas do usuário autenticado\n  const fetchTarefas = async () => {\n    try {\n      // Obtendo o token do localStorage\n      const token = localStorage.getItem('token');\n      // Verificando se o token existe\n      if (!token) {\n        // Se não houver token, exibir mensagem e redirecionar para login\n        setMessage('Erro: Você precisa estar logado para ver as tarefas');\n        navigate('/login');\n        return;\n      }\n      // Fazendo requisição GET para listar tarefas, incluindo o token no header\n      const response = await axios.get('http://localhost:3001/api/tarefas', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      // Atualizando o estado com as tarefas retornadas\n      setTarefas(response.data.tarefas);\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response3;\n      // Corrigindo: garantindo que 'error' é o parâmetro\n      // Capturando erros e exibindo mensagem\n      setMessage(`Erro: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Falha ao listar tarefas'}`);\n      // Se o erro for de autenticação, redirecionar para login\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401 || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 403) {\n        navigate('/login');\n      }\n    }\n  };\n\n  // Executando fetchTarefas quando o componente é montado\n  useEffect(() => {\n    fetchTarefas();\n  }, []); // Array vazio garante que só executa uma vez\n\n  // Função para criar uma nova tarefa\n  const handleCreate = async e => {\n    // Prevenindo o comportamento padrão do formulário\n    e.preventDefault();\n    try {\n      // Obtendo o token\n      const token = localStorage.getItem('token');\n      // Verificando se o token existe\n      if (!token) {\n        setMessage('Erro: Você precisa estar logado');\n        navigate('/login');\n        return;\n      }\n      // Fazendo requisição POST para criar tarefa\n      const response = await axios.post('http://localhost:3001/api/tarefas', {\n        titulo\n      },\n      // Enviando o título da tarefa\n      {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      } // Incluindo o token\n      );\n      // Exibindo mensagem de sucesso\n      setMessage(`Sucesso: ${response.data.message} (ID: ${response.data.tarefaId})`);\n      // Limpando o campo de título\n      setTitulo('');\n      // Atualizando a lista de tarefas\n      fetchTarefas();\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      // Garantindo que 'error' está definido\n      // Exibindo mensagem de erro\n      setMessage(`Erro: ${((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Falha ao criar tarefa'}`);\n    }\n  };\n\n  // Função para excluir uma tarefa\n  const handleDelete = async id => {\n    try {\n      // Obtendo o token\n      const token = localStorage.getItem('token');\n      // Verificando se o token existe\n      if (!token) {\n        setMessage('Erro: Você precisa estar logado');\n        navigate('/login');\n        return;\n      }\n      // Fazendo requisição DELETE para excluir a tarefa\n      const response = await axios.delete(`http://localhost:3001/api/tarefas/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      // Exibindo mensagem de sucesso\n      setMessage(`Sucesso: ${response.data.message}`);\n      // Atualizando a lista de tarefas\n      fetchTarefas();\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      // Garantindo que 'error' está definido\n      // Exibindo mensagem de erro\n      setMessage(`Erro: ${((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Falha ao excluir tarefa'}`);\n    }\n  };\n\n  // Renderizando o componente\n  return (\n    /*#__PURE__*/\n    // Container principal com margem superior\n    _jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Minhas Tarefas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreate,\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"titulo\",\n            className: \"form-label\",\n            children: \"T\\xEDtulo da Tarefa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"titulo\",\n            value: titulo,\n            onChange: e => setTitulo(e.target.value) // Atualizando o estado\n            ,\n            required: true // Campo obrigatório\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Criar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: tarefas.map(tarefa =>\n        /*#__PURE__*/\n        // Item da lista com layout flexível\n        _jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          children: [tarefa.titulo, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-sm\",\n            onClick: () => handleDelete(tarefa.id) // Chamando handleDelete\n            ,\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, tarefa.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n// Exportando o componente\n_s(Tarefas, \"W0Op2LemP2Mt24G+rw0ipK3vLHs=\", false, function () {\n  return [useNavigate];\n});\n_c = Tarefas;\nexport default Tarefas;\nvar _c;\n$RefreshReg$(_c, \"Tarefas\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Tarefas","_s","tarefas","setTarefas","titulo","setTitulo","message","setMessage","navigate","fetchTarefas","token","localStorage","getItem","response","get","headers","Authorization","data","error","_error$response","_error$response$data","_error$response2","_error$response3","status","handleCreate","e","preventDefault","post","tarefaId","_error$response4","_error$response4$data","handleDelete","id","delete","_error$response5","_error$response5$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","map","tarefa","onClick","_c","$RefreshReg$"],"sources":["C:/Users/programador/Documents/crudReact/app-crud-senai/frontend/src/components/Tarefas.js"],"sourcesContent":["// Importando o React e os hooks necessários para gerenciar estado e efeitos\r\nimport React, { useState, useEffect } from 'react';\r\n// Importando axios para fazer requisições HTTP ao backend\r\nimport axios from 'axios';\r\n// Importando useNavigate para redirecionar o usuário\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Definindo o componente funcional Tarefas\r\nconst Tarefas = () => {\r\n    // Estado para armazenar a lista de tarefas\r\n    const [tarefas, setTarefas] = useState([]);\r\n    // Estado para o título da nova tarefa\r\n    const [titulo, setTitulo] = useState('');\r\n    // Estado para mensagens de feedback (sucesso ou erro)\r\n    const [message, setMessage] = useState('');\r\n    // Hook de navegação para redirecionar\r\n    const navigate = useNavigate();\r\n\r\n    // Função para buscar as tarefas do usuário autenticado\r\n    const fetchTarefas = async () => {\r\n        try {\r\n            // Obtendo o token do localStorage\r\n            const token = localStorage.getItem('token');\r\n            // Verificando se o token existe\r\n            if (!token) {\r\n                // Se não houver token, exibir mensagem e redirecionar para login\r\n                setMessage('Erro: Você precisa estar logado para ver as tarefas');\r\n                navigate('/login');\r\n                return;\r\n            }\r\n            // Fazendo requisição GET para listar tarefas, incluindo o token no header\r\n            const response = await axios.get('http://localhost:3001/api/tarefas', {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            // Atualizando o estado com as tarefas retornadas\r\n            setTarefas(response.data.tarefas);\r\n        } catch (error) { // Corrigindo: garantindo que 'error' é o parâmetro\r\n            // Capturando erros e exibindo mensagem\r\n            setMessage(`Erro: ${error.response?.data?.message || 'Falha ao listar tarefas'}`);\r\n            // Se o erro for de autenticação, redirecionar para login\r\n            if (error.response?.status === 401 || error.response?.status === 403) {\r\n                navigate('/login');\r\n            }\r\n        }\r\n    };\r\n\r\n    // Executando fetchTarefas quando o componente é montado\r\n    useEffect(() => {\r\n        fetchTarefas();\r\n    }, []); // Array vazio garante que só executa uma vez\r\n\r\n    // Função para criar uma nova tarefa\r\n    const handleCreate = async (e) => {\r\n        // Prevenindo o comportamento padrão do formulário\r\n        e.preventDefault();\r\n        try {\r\n            // Obtendo o token\r\n            const token = localStorage.getItem('token');\r\n            // Verificando se o token existe\r\n            if (!token) {\r\n                setMessage('Erro: Você precisa estar logado');\r\n                navigate('/login');\r\n                return;\r\n            }\r\n            // Fazendo requisição POST para criar tarefa\r\n            const response = await axios.post(\r\n                'http://localhost:3001/api/tarefas',\r\n                { titulo }, // Enviando o título da tarefa\r\n                { headers: { Authorization: `Bearer ${token}` } } // Incluindo o token\r\n            );\r\n            // Exibindo mensagem de sucesso\r\n            setMessage(`Sucesso: ${response.data.message} (ID: ${response.data.tarefaId})`);\r\n            // Limpando o campo de título\r\n            setTitulo('');\r\n            // Atualizando a lista de tarefas\r\n            fetchTarefas();\r\n        } catch (error) { // Garantindo que 'error' está definido\r\n            // Exibindo mensagem de erro\r\n            setMessage(`Erro: ${error.response?.data?.message || 'Falha ao criar tarefa'}`);\r\n        }\r\n    };\r\n\r\n    // Função para excluir uma tarefa\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            // Obtendo o token\r\n            const token = localStorage.getItem('token');\r\n            // Verificando se o token existe\r\n            if (!token) {\r\n                setMessage('Erro: Você precisa estar logado');\r\n                navigate('/login');\r\n                return;\r\n            }\r\n            // Fazendo requisição DELETE para excluir a tarefa\r\n            const response = await axios.delete(`http://localhost:3001/api/tarefas/${id}`, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            // Exibindo mensagem de sucesso\r\n            setMessage(`Sucesso: ${response.data.message}`);\r\n            // Atualizando a lista de tarefas\r\n            fetchTarefas();\r\n        } catch (error) { // Garantindo que 'error' está definido\r\n            // Exibindo mensagem de erro\r\n            setMessage(`Erro: ${error.response?.data?.message || 'Falha ao excluir tarefa'}`);\r\n        }\r\n    };\r\n\r\n    // Renderizando o componente\r\n    return (\r\n        // Container principal com margem superior\r\n        <div className=\"container mt-4\">\r\n            {/* Título da página */}\r\n            <h2 className=\"text-center\">Minhas Tarefas</h2>\r\n            {/* Exibindo mensagem de feedback, se existir */}\r\n            {message && <div className=\"alert alert-info\">{message}</div>}\r\n            {/* Formulário para criar nova tarefa */}\r\n            <form onSubmit={handleCreate} className=\"mb-4\">\r\n                <div className=\"mb-3\">\r\n                    {/* Label para o campo de título */}\r\n                    <label htmlFor=\"titulo\" className=\"form-label\">Título da Tarefa</label>\r\n                    {/* Campo de entrada para o título */}\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"titulo\"\r\n                        value={titulo}\r\n                        onChange={(e) => setTitulo(e.target.value)} // Atualizando o estado\r\n                        required // Campo obrigatório\r\n                    />\r\n                </div>\r\n                {/* Botão para enviar o formulário */}\r\n                <button type=\"submit\" className=\"btn btn-primary\">Criar Tarefa</button>\r\n            </form>\r\n            {/* Lista de tarefas */}\r\n            <ul className=\"list-group\">\r\n                {/* Mapeando as tarefas para exibir cada uma */}\r\n                {tarefas.map((tarefa) => (\r\n                    // Item da lista com layout flexível\r\n                    <li key={tarefa.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                        {/* Exibindo o título da tarefa */}\r\n                        {tarefa.titulo}\r\n                        {/* Botão para excluir a tarefa */}\r\n                        <button\r\n                            className=\"btn btn-danger btn-sm\"\r\n                            onClick={() => handleDelete(tarefa.id)} // Chamando handleDelete\r\n                        >\r\n                            Excluir\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Exportando o componente\r\nexport default Tarefas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}