{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\programador\\\\Documents\\\\crudReact\\\\app-crud-senai\\\\frontend\\\\src\\\\components\\\\Tarefas.js\",\n  _s = $RefreshSig$();\n//Listar, inserir e exluir tarefas\n\n// Importa o React e useState para gerenciar estado e efeitos\nimport React, { useState, useEffect } from 'react';\n// Importa o axios para fazer requisições HTTP\nimport axios from 'axios';\n// importa o usenavagation para redirecionamento\nimport { useNavigate } from 'react-router-dom';\n\n// Definir componente Tarefas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tarefas = () => {\n  _s();\n  // Estado para listar as tarefas\n  const [tarefas, SetTarefas] = useState([]);\n  // Estado para título de tarefas\n  const [titulo, setTitulo] = useState('');\n  // Estado para a mensagem de resposta\n  const [message, setMessage] = useState('');\n  //hook para navegação\n  const navigate = useNavigate();\n\n  // função para carregar tarefas do usuário.\n  const fetchTarefas = async () => {\n    try {\n      //obter token do localstorage\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setMessage('Erro: você precisa estar logado para ver a s tarefas');\n        navigate('/login');\n        return;\n      }\n      // faz uma requisição GET pra listar as tarefas\n      const response = await axios.get('http://localhost:3001/api/tarefas', {\n        headers: {\n          Authorization: 'Bearer ${token}'\n        }\n      });\n\n      //atualiza o estado com as tarefas\n      SetTarefas(response.data.tarefas);\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response3;\n      // Define a mensagem de erro\n      setMessage(`Erro: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Falha ao listar tarefas'}`);\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401 || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 403) {\n        navigate('/login');\n      }\n    }\n  };\n\n  // carrega as tarefas quando o componente é montado\n  useEffect(() => {\n    fetchTarefas();\n  }, []);\n\n  // função para incluir tarefas\n  const handleCreate = async e => {\n    // Impede o comportamento padrão do formulário\n    e.preventDefault();\n    try {\n      //obter token do localstorage\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setMessage('Erro: você precisa estar logado para ver a s tarefas');\n        navigate('/login');\n        return;\n      }\n      // faz uma requisição POST pra listar as tarefas\n      const response = await axios.post('http://localhost:3001/api/tarefas', {\n        titulo\n      }, {\n        headers: {\n          Authorization: 'Bearer ${token}'\n        }\n      });\n\n      // Define a mensagem de sucesso\n      setMessage(`Sucesso: ${response.data.message} (ID: ${response.data.tarefa})`);\n      // Limpa os campos\n      setTitulo(''); //limpa o campo\n      fetchTarefas(); //recarrega as tarefas\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      // Define a mensagem de erro\n      setMessage(`Erro: ${((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Falha ao falha ao recarregar as tarefas'}`);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      //obter token do localstorage\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setMessage('Erro: você precisa estar logado para ver a s tarefas');\n        navigate('/login');\n        return;\n      }\n      // faz uma requisição DELETE pra listar as tarefas\n      const response = await axios.delete('http://localhost:3001/api/tarefas/${id}', {\n        headers: {\n          Authorization: 'Bearer ${token}'\n        }\n      });\n\n      // Define a mensagem de sucesso\n      setMessage(`Sucesso: ${response.data.message} (ID: ${response.data.tarefa})`);\n      // Limpa os campos\n      fetchTarefas(); //recarrega as tarefas\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      // Define a mensagem de erro\n      setMessage(`Erro: ${((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Falha ao excluir a tarefa'}`);\n    }\n  };\n\n  //renderizar o componente\n\n  // Renderiza o componente\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Minhas tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreate,\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"titulo\",\n          className: \"form-label\",\n          children: \"T\\xEDtulo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"titulo\",\n          className: \"form-control\",\n          id: \"titulo\",\n          value: titulo,\n          onChange: e => setTitulo(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Criar tarefas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: tarefas.map(tarefa => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [tarefa.titulo, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => handleDelete(tarefa.id),\n          children: \"Excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)]\n      }, '{tarefa.id}', true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n//exportando o componente\n_s(Tarefas, \"tuxsxMSpaQ3FHus5D9a7TitbGqA=\", false, function () {\n  return [useNavigate];\n});\n_c = Tarefas;\nexport default Tarefas;\nvar _c;\n$RefreshReg$(_c, \"Tarefas\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Tarefas","_s","tarefas","SetTarefas","titulo","setTitulo","message","setMessage","navigate","fetchTarefas","token","localStorage","getItem","response","get","headers","Authorization","data","error","_error$response","_error$response$data","_error$response2","_error$response3","status","handleCreate","e","preventDefault","post","tarefa","_error$response4","_error$response4$data","handleDelete","id","delete","_error$response5","_error$response5$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/programador/Documents/crudReact/app-crud-senai/frontend/src/components/Tarefas.js"],"sourcesContent":["//Listar, inserir e exluir tarefas\r\n\r\n// Importa o React e useState para gerenciar estado e efeitos\r\nimport React, { useState, useEffect } from 'react';\r\n// Importa o axios para fazer requisições HTTP\r\nimport axios from 'axios';\r\n// importa o usenavagation para redirecionamento\r\nimport { useNavigate} from 'react-router-dom';\r\n\r\n// Definir componente Tarefas\r\nconst Tarefas = () => {\r\n    // Estado para listar as tarefas\r\n    const [tarefas, SetTarefas] = useState([]);\r\n    // Estado para título de tarefas\r\n    const [titulo, setTitulo] = useState('');\r\n    // Estado para a mensagem de resposta\r\n    const [message, setMessage] = useState('');\r\n    //hook para navegação\r\n    const navigate = useNavigate();\r\n\r\n    // função para carregar tarefas do usuário.\r\n    const fetchTarefas = async () => {\r\n        try {\r\n            //obter token do localstorage\r\n            const token = localStorage.getItem('token');\r\n            if(!token){\r\n                setMessage('Erro: você precisa estar logado para ver a s tarefas');\r\n                navigate('/login');\r\n                return;\r\n            }\r\n            // faz uma requisição GET pra listar as tarefas\r\n            const response = await axios.get('http://localhost:3001/api/tarefas', {headers: { Authorization: 'Bearer ${token}'}\r\n            });\r\n\r\n            //atualiza o estado com as tarefas\r\n            SetTarefas(response.data.tarefas);\r\n        } catch (error) {\r\n            // Define a mensagem de erro\r\n            setMessage(`Erro: ${error.response?.data?.message || 'Falha ao listar tarefas'}`);\r\n            if (error.response?.status === 401 || error.response?.status === 403){\r\n                navigate('/login');\r\n            }\r\n        }\r\n    };\r\n\r\n    // carrega as tarefas quando o componente é montado\r\n    useEffect(() => {\r\n        fetchTarefas();\r\n    }, []);\r\n\r\n    // função para incluir tarefas\r\n    const handleCreate = async (e) => {\r\n        // Impede o comportamento padrão do formulário\r\n        e.preventDefault();\r\n        try {\r\n            //obter token do localstorage\r\n            const token = localStorage.getItem('token');\r\n            if(!token){\r\n                setMessage('Erro: você precisa estar logado para ver a s tarefas');\r\n                navigate('/login');\r\n                return;\r\n            }\r\n             // faz uma requisição POST pra listar as tarefas\r\n            const response = await axios.post('http://localhost:3001/api/tarefas', {titulo}, {headers: { Authorization: 'Bearer ${token}'}\r\n            });\r\n\r\n            // Define a mensagem de sucesso\r\n            setMessage(`Sucesso: ${response.data.message} (ID: ${response.data.tarefa})`);\r\n            // Limpa os campos\r\n           setTitulo(''); //limpa o campo\r\n           fetchTarefas(); //recarrega as tarefas\r\n\r\n        } catch (error) {\r\n            // Define a mensagem de erro\r\n            setMessage(`Erro: ${error.response?.data?.message || 'Falha ao falha ao recarregar as tarefas'}`);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n         try {\r\n            //obter token do localstorage\r\n            const token = localStorage.getItem('token');\r\n            if(!token){\r\n                setMessage('Erro: você precisa estar logado para ver a s tarefas');\r\n                navigate('/login');\r\n                return;\r\n            }\r\n             // faz uma requisição DELETE pra listar as tarefas\r\n            const response = await axios.delete('http://localhost:3001/api/tarefas/${id}', {headers: { Authorization: 'Bearer ${token}'}\r\n            });\r\n\r\n            // Define a mensagem de sucesso\r\n            setMessage(`Sucesso: ${response.data.message} (ID: ${response.data.tarefa})`);\r\n            // Limpa os campos\r\n            fetchTarefas(); //recarrega as tarefas\r\n\r\n            } catch (error) {\r\n                // Define a mensagem de erro\r\n                setMessage(`Erro: ${error.response?.data?.message || 'Falha ao excluir a tarefa'}`);\r\n            }\r\n        };\r\n\r\n\r\n    //renderizar o componente\r\n   \r\n    // Renderiza o componente\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h2 className=\"text-center\">Minhas tarefas</h2>\r\n            {/* Exibe a mensagem de resposta */}\r\n            {message && <div className=\"alert alert-info\">{message}</div>}\r\n            {/* Formulário de registro */}\r\n            <form onSubmit={handleCreate} className=\"mt-4\">\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"titulo\" className=\"form-label\">Título</label>\r\n                    <input\r\n                        type=\"titulo\"\r\n                        className=\"form-control\"\r\n                        id=\"titulo\"\r\n                        value={titulo}\r\n                        onChange={(e) => setTitulo(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>                \r\n                <button type=\"submit\" className=\"btn btn-primary\">Criar tarefas</button>\r\n            </form>\r\n\r\n            <ul className='list-group'>\r\n                {tarefas.map((tarefa) => (\r\n                    <li key='{tarefa.id}' className='list-group-item d-flex justify-content-between align-items-center'>\r\n                        {tarefa.titulo}\r\n                        <button className='btn btn-danger' onClick = {() => handleDelete(tarefa.id)}>Excluir</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\n//exportando o componente\r\nexport default Tarefas;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}